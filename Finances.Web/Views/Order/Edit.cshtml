@model Finances.Data.Order

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@{
    Html.EnableClientValidation(false);
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Order</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Client)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Client)
            @Html.ValidationMessageFor(model => model.Client)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndClient)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndClient)
            @Html.ValidationMessageFor(model => model.EndClient)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Start)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Start)
            @Html.ValidationMessageFor(model => model.Start)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.End)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.End)
            @Html.ValidationMessageFor(model => model.End)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Days)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Days)
            @Html.ValidationMessageFor(model => model.Days)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rate)
            @Html.ValidationMessageFor(model => model.Rate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Fee)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Fee, "Readonly")
            @Html.ValidationMessageFor(model => model.Fee)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Travel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Travel)
            @Html.ValidationMessageFor(model => model.Travel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Total)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Total, "Readonly")
            @Html.ValidationMessageFor(model => model.Total)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/OrderCreateEdit.js")
}
